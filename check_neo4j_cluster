#!/usr/bin/perl
# Author: Dave Stern (dave@davestern.com)
# Version: 0.1


use lib '/usr/lib/nagios/plugins';
use utils qw(%ERRORS $TIMEOUT);

use strict;
use warnings;
use LWP::UserAgent;
use Getopt::Std;
use Data::Dumper;

sub main {

    my %options=();
    getopts("a:hu:p:P:s:", \%options);

    if($options{'h'})
    {
        usage();
        exit $ERRORS{'UNKNOWN'};
    }

    if(! $options{'s'})
    {
        print qq|\nAt least one server name is required.\n|;
        exit $ERRORS{'UNKNOWN'};
    }


    my @servers = split(/,/, $options{'s'});

    # Defaults
    my $port = $options{'P'} || 7474;
    my $path = $options{'a'} || '/db/manage/server/ha/available';

    if ($path !~ m@^/@)
    {
        $path = "/$path";
    }

    my $ua = LWP::UserAgent->new;
    $ua->timeout(3);

    my $totalServers = scalar(@servers);
    my %serverType = (
        'master' => 0,
        'slave'  => 0
    );

    for my $server (@servers)
    {
        my $uri = qq|$server:$port$path|;

        if($server !~ /^http/i)
        {
            $uri = "http://$uri";
        }

        my $req = HTTP::Request->new(GET => $uri);
        my $res = $ua->request($req);

        if ($res->is_success) {
            $serverType{$res->content}++;
        }
    }

    my @errors;

    if($serverType{'master'} != 1)
    {
        push(@errors, "Master quantity is not exactly 1, there are $serverType{'master'} masters.");
    }

    if($serverType{'slave'} != ($totalServers - 1))
    {
        push(@errors, "Slave quantity is not exactly " . ($totalServers - 1) . ", there are $serverType{'slave'} slaves.");
    }

    if(@errors)
    {
        print join(" ", @errors);
        exit $ERRORS{'CRITICAL'};
    }
    else
    {
        exit $ERRORS{'OK'};
    }
}

sub usage {

    print qq|\nUsage: check_neo4j_cluster -s host1[,host2,etc] [-a path] [-P port] [-h this help message]\n|;

    # Extended usage information:
    #
    #     -a Optional: Path to "available". Default: /db/manage/server/ha/available
    #
    #     -h This help message
    #
    #     -P Optional: Port. Default: 7474
    #
    #     -s Required: Comma-separated list of servers to check

}

main();
